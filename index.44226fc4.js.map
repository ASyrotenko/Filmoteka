{"mappings":"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","sources":["src/index.js","src/js/addvideo.js","src/js/firebase-db-index.js","src/js/movie-card.js","src/js/search-movie.js","src/js/films-gallery.js","src/js/get-genres.js"],"sourcesContent":["import './js/modal-team';\nimport './js/addvideo';\nimport './js/firebase-auth';\nimport './js/firebase-db-index';\nimport './js/firebase-class';\nimport './js/movie-card';\nimport './js/search-movie';\nimport './js/change-color-scheme.js';\n// import './js/pagination';\n\nimport { FilmsApiService } from './js/films-service';\nimport { filmTpl } from './js/films-gallery';\nimport { getRefs } from './js/get-refs';\nimport { combineGenres } from './js/get-genres';\n// import { pagination } from './js/pagination';\nconst refs = getRefs();\n\nfunction renderFilmGallery(films, genres) {\n  refs.filmGallery.insertAdjacentHTML('beforeend', filmTpl(films, genres));\n  //remove spinner\n  document.querySelector('.spinner').style.display = 'none';\n}\n\nexport const filmsApiService = new FilmsApiService();\nasync function load() {\n  const genres = await combineGenres();\n  const filmsTrending = await filmsApiService.fetchFilmsTrending();\n  renderFilmGallery(filmsTrending, genres);\n}\nload();\n","import { getRefs } from './get-refs';\nconst refs = getRefs();\nimport { filmsApiService } from '../index';\n\nconst stopVideos = () => {\n  document.querySelectorAll('iframe').forEach(v => {\n    v.src = v.src;\n  });\n  document.querySelectorAll('video').forEach(v => {\n    v.pause();\n  });\n};\n\nrefs.trailerOverlay.addEventListener('click', showVideo);\nrefs.closeVideoBtn.addEventListener('click', closeVideo);\nrefs.watchBtn.addEventListener('click', showVideo);\n\nfunction videoTpl(trailer) {\n  const { key, site } = trailer;\n\n  return `<iframe class=\"iframe\" width=\"100%\" height=\"100%\" src=\"https://www.${site}.com/embed/${key}?origin=https://asyrotenko.github.io\" title=\"video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media;\n    gyroscope; picture-in-picture\" allowfullscreen></iframe>`;\n}\n\nexport function renderVideoBox(videos) {\n  const trailer = videos.find(video => video.name === 'Official Trailer' ?? {});\n  if (!trailer) {\n    refs.watchBtn.classList.add('not-active');\n    refs.trailerOverlay.classList.add('not-active');\n    return;\n  }\n  refs.insertVideoCont.insertAdjacentHTML('beforeend', videoTpl(trailer));\n}\n\nexport async function showVideo() {\n  refs.insertVideoCont.classList.add('is-active');\n  refs.trailerBox.classList.add('is-active');\n  refs.watchBtn.setAttribute('disabled', ' ');\n  refs.closeVideoBtn.removeAttribute('disabled');\n  refs.insertVideoCont.scrollIntoView();\n}\n\nexport function closeVideo() {\n  stopVideos();\n  refs.insertVideoCont.classList.remove('is-active');\n  refs.trailerBox.classList.remove('is-active');\n  refs.closeVideoBtn.setAttribute('disabled', '');\n  refs.watchBtn.removeAttribute('disabled');\n}\n","import { Firebase } from './firebase-class';\nimport { getRefs } from './get-refs';\n\nconst refs = getRefs();\n\nconst firebase = new Firebase();\n\nrefs.addToWatched.addEventListener('click', pullToWatched);\nrefs.addToQueue.addEventListener('click', pullToQueue);\nrefs.filmGallery.addEventListener('click', getMovieStatus);\n\nasync function getMovieStatus(e) {\n  const textContentRemoveWatched = 'remove from watched';\n  const watchedMovies = await firebase.getDoc('watched');\n  const watchedMoviesId = Object.values(watchedMovies);\n  const currentWatchedMovieStatus = watchedMoviesId.includes(e.target.id);\n\n  if (currentWatchedMovieStatus) {\n    refs.addToWatched.textContent = textContentRemoveWatched;\n    refs.addToWatched.classList.add('film-btn--active');\n  }\n\n  const textContentRemoveQueue = 'remove from queue';\n  const queueMovies = await firebase.getDoc('queue');\n  const queueMoviesId = Object.values(queueMovies);\n  const currentQueueMovieStatus = queueMoviesId.includes(e.target.id);\n\n  if (currentQueueMovieStatus) {\n    refs.addToQueue.textContent = textContentRemoveQueue;\n    refs.addToQueue.classList.add('film-btn--active');\n  }\n}\n\nfunction pullToWatched(e) {\n  const textContentAdd = 'add to watched';\n  const textContentRemove = 'remove from watched';\n  console.log(firebase.setDoc.userId);\n  if (e.target.textContent.includes(textContentAdd)) {\n    e.target.textContent = textContentRemove;\n    firebase.setDoc('watched');\n    firebase.removeFilmById('queue');\n    refs.addToQueue.textContent = 'add to queue';\n    refs.addToQueue.classList.remove('film-btn--active');\n  } else if (e.target.textContent.includes(textContentRemove)) {\n    e.target.textContent = textContentAdd;\n    firebase.removeFilmById('watched');\n    refs.addToWatched.classList.remove('film-btn--active');\n  }\n}\n\nfunction pullToQueue(e) {\n  const textContentAdd = 'add to queue';\n  const textContentRemove = 'remove from queue';\n  if (e.target.textContent.includes(textContentAdd)) {\n    e.target.textContent = textContentRemove;\n    firebase.setDoc('queue');\n    firebase.removeFilmById('watched');\n    refs.addToWatched.textContent = 'add to watched';\n    refs.addToWatched.classList.remove('film-btn--active');\n  } else if (e.target.textContent.includes(textContentRemove)) {\n    e.target.textContent = textContentAdd;\n    firebase.removeFilmById('queue');\n    refs.addToQueue.classList.remove('film-btn--active');\n  }\n}\n","// const posterUrl = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\nconst posterLargeUrl = 'https://image.tmdb.org/t/p/original';\n// const posterLargeUrl = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2';\nimport { filmsApiService } from '../index';\nimport { getRefs } from './get-refs';\nimport { closeVideo, renderVideoBox } from './addvideo';\n\nconst refs = getRefs();\n\nconst backdrop = document.querySelector('.backdrop');\nbackdrop.addEventListener('click', backdropClick);\n\nexport function renderMovieCard(movie) {\n  refs.insertImgCont.insertAdjacentHTML('beforeend', getPosterForCard(movie));\n  refs.movieBox.insertAdjacentHTML('beforeend', movieCardTpl(movie));\n  document.querySelector('.spinner').style.display = 'none';\n}\nexport function movieCardTpl(movie) {\n  const {\n    title,\n    original_name,\n    original_title,\n    popularity,\n    genres,\n    vote_average,\n    vote_count,\n    overview,\n    id,\n    video,\n  } = movie;\n\n  const movieTitle = original_name ?? original_title ?? '';\n  const movieGenres = genres ? genres.map(genre => genre.name) : '';\n\n  return `\n  <div class=\"img-box\"></div>\n  <div class=\"movie__id\" id=\"${id}\" ><h2 class=\"movie-card__title\">\n    ${title ?? movieTitle}\n    </h2>\n  <div class=\"movie__info-container\">\n<table class=\"movie-info__table\">\n  <tr>\n    ${\n      vote_count\n        ? `\n            <td class=\"movie__info-item\">Vote / Votes</td>\n        `\n        : ''\n    }\n    ${\n      vote_count\n        ? `\n            <td class=\"movie__info-data\"><span class=\"td-box\">${vote_average.toFixed(\n              1\n            )}</span> / ${vote_count}</td>\n        `\n        : ''\n    }\n    \n  </tr>\n  <tr>\n    ${\n      popularity\n        ? `\n            <td class=\"movie__info-item\">Popularity</td>\n        `\n        : ''\n    }\n    ${\n      popularity\n        ? `\n            <td class=\"movie__info-data\">${popularity.toFixed(1)}</td>\n        `\n        : ''\n    }\n  </tr>\n  <tr>\n     ${\n       movieTitle\n         ? `\n                <td class=\"movie__info-item\">Original Title</td>\n        `\n         : ''\n     }\n    ${\n      movieTitle\n        ? `\n                <td class=\"movie__info-data movie__info-data--title\">${movieTitle}</td>\n        `\n        : ''\n    }\n  </tr>\n    <tr>\n    ${movieGenres ? `<td class=\"movie__info-item\">Genre</td>` : ''}\n    ${\n      movieGenres\n        ? `<td class=\"movie__info-data\">${movieGenres.join(', ')}</td>`\n        : ''\n    }\n  </tr>\n</table>\n</div>\n${\n  overview\n    ? `\n    <h3 class=\"movie__about\">About</h3> `\n    : ''\n}\n${\n  overview\n    ? `\n    <p class=\"movie__about-info\">${overview}</p> `\n    : ''\n}\n</div>`;\n}\n\nexport function getPosterForCard({\n  original_title,\n  poster_path,\n  backdrop_path,\n} = {}) {\n  const moviePoster = poster_path ?? backdrop_path ?? '';\n  return `\n             <img\n            class=\"movie__poster\"\n            ${\n              moviePoster\n                ? `\n        src=\"${posterLargeUrl}${moviePoster}\"\n        `\n                : `src = ''`\n            }\n                        alt=\"Movie: ${original_title ?? ''}\"\n          />\n`;\n}\n\nrefs.filmGallery.addEventListener('click', onMovieCardClick);\n\nasync function onMovieCardClick(e) {\n  e.preventDefault();\n\n  if (!e.target.classList.contains('film__image')) {\n    return;\n  }\n\n  refs.insertImgCont.innerHTML = '';\n  refs.movieBox.innerHTML = '';\n  refs.watchBtn.classList.remove('not-active');\n\n  const movieCard = await filmsApiService.fetchMovie(e.target.id);\n  if (!movieCard) {\n    return;\n    // Вивести повідомлення про помилку!!!!\n  }\n\n  refs.modalBackdrop.classList.remove('is-hidden');\n  window.addEventListener('keydown', onEscPress);\n  document.querySelector('body').classList.add('modal-open');\n  renderMovieCard(movieCard);\n  const movieCardIdRef = document.querySelector('.movie__id');\n  const movieId = movieCardIdRef.id;\n  const videos = await filmsApiService.fetchMovieVideo(movieId);\n  renderVideoBox(videos);\n}\n\nrefs.modalCloseBtn.addEventListener('click', onMovieModalClose);\n\nfunction onMovieModalClose(e) {\n  refs.trailerOverlay.classList.remove('not-active');\n\n  refs.modalBackdrop.classList.add('is-hidden');\n  window.removeEventListener('keydown', onEscPress);\n  closeVideo();\n  document.querySelector('body').classList.remove('modal-open');\n  refs.insertVideoCont.innerHTML = ' ';\n\n  refs.addToWatched.textContent = 'add to watched';\n  refs.addToWatched.classList.remove('film-btn--active');\n  refs.addToQueue.textContent = 'add to queue';\n  refs.addToQueue.classList.remove('film-btn--active');\n}\n\nfunction onEscPress(e) {\n  if (e.code === 'Escape') {\n    onMovieModalClose();\n  }\n}\n\nfunction backdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onMovieModalClose();\n  }\n}\n","import { getRefs } from './get-refs';\nimport { FilmsApiService } from './films-service';\nimport { filmTpl } from './films-gallery';\nimport { combineGenres } from './get-genres';\n\nconst refs = getRefs();\n\nconst filmsApiService = new FilmsApiService();\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nasync function onSearch(e) {\n  e.preventDefault();\n  const form = e.target;\n  filmsApiService.query = e.target.elements.search.value.trim();\n\n  if (filmsApiService.query === '') {\n    onError();\n    return;\n  }\n  const genres = await combineGenres();\n  const filmOnSearch = await filmsApiService.fetchFilmsOnSearch(\n    filmsApiService.query\n  );\n  clearGalleryContainer();\n  renderFilmGallery(filmOnSearch, genres);\n  form.reset();\n}\n\nfunction onError() {\n  alert('Please type something');\n  console.log('ERROR');\n}\n\nfunction renderFilmGallery(films, genres) {\n  refs.filmGallery.insertAdjacentHTML('beforeend', filmTpl(films, genres));\n}\n\nfunction clearGalleryContainer() {\n  refs.filmGallery.innerHTML = '';\n}\n","const posterUrl = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\nconst posterLargeUrl = 'https://image.tmdb.org/t/p/original';\n// const posterLargeUrl = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2';\n// import { filmsApiService } from '../index';\n//image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\n\nexport function filmTpl({ results }, genresDict) {\n  return results\n    .map(\n      ({\n        original_name,\n        original_title,\n        release_date,\n        first_air_date,\n        genre_ids,\n        vote_average: votes,\n        poster_path: poster,\n        id,\n      }) => {\n        const filmTitle = original_name ?? original_title ?? '';\n        const filmDate = release_date ?? first_air_date ?? '';\n        return ` <li   class=\"film__item\">\n    \n        <a class=\"film__link\"\n        href=\"#\"\n        >\n          <img id='${id}'\n            class=\"film__image\"\n            ${\n              poster\n                ? `\n        src=\"${posterLargeUrl}${poster}\"\n        `\n                : `src = 'https://upload.wikimedia.org/wikipedia/commons/f/f9/No-image-available.jpg'`\n            }\n                        alt=\"Movie: ${filmTitle}\"\n          />\n        </a>\n      </div>\n      <div class=\"film__info\">\n      <p class=\"film__info--text\">Watch \"${filmTitle}\" online</p>\n      </div>\n      <div class=\"film__content\">\n        ${\n          filmTitle\n            ? `\n        <h3 class=\"film__film__title\">\n          ${filmTitle}</h3>\n        `\n            : ''\n        } ${\n          genre_ids\n            ? `\n        <p class=\"film__genres\">${genre_ids\n          .map(id => genresDict[id])\n          .join(', ')}\n        </p>\n        `\n            : ''\n        } \n\n        ${\n          filmDate\n            ? `\n        <p class=\"film__date\">| ${new Date(filmDate).getFullYear()}</p>\n        `\n            : ''\n        } \n   \n    </li>\n    `;\n      }\n    )\n    .join('');\n}\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './films-service';\n\nasync function fetchMovieGenres() {\n  try {\n    const url = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data.genres.reduce((acc, currentValue) => {\n      acc[currentValue.id] = currentValue.name;\n\n      return acc;\n    }, {});\n  } catch (error) {\n    alert('ERRORgenres');\n  }\n}\n\nasync function fetchTvGenres() {\n  try {\n    const url = `${BASE_URL}/genre/tv/list?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data.genres.reduce((acc, currentValue) => {\n      acc[currentValue.id] = currentValue.name;\n\n      return acc;\n    }, {});\n  } catch (error) {\n    alert('ERRORTvgenres');\n  }\n}\n\nexport async function combineGenres() {\n  const movieGenres = await fetchMovieGenres();\n  const tvGenres = await fetchTvGenres();\n  const genres = { ...movieGenres, ...tvGenres };\n  return genres;\n}\n"],"names":["$bpxeT","parcelRequire","$5274eb74605a1106$var$refs","getRefs","$5274eb74605a1106$export$4c07ddf2d98a14f0","videos","ref","trailer","find","video","name","watchBtn","classList","add","trailerOverlay","insertVideoCont","insertAdjacentHTML","key","site","concat","$5274eb74605a1106$var$videoTpl","$5274eb74605a1106$export$3949c78fa34dc1d0","$5274eb74605a1106$var$_showVideo","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","trailerBox","setAttribute","closeVideoBtn","removeAttribute","scrollIntoView","$5274eb74605a1106$export$add73491473b3471","document","querySelectorAll","forEach","v","src","pause","remove","addEventListener","$f636cf4b6acf073e$var$refs","$f636cf4b6acf073e$var$firebase","$iGaYn","Firebase","$f636cf4b6acf073e$var$_getMovieStatus","e","textContentRemoveWatched","watchedMovies","watchedMoviesId","textContentRemoveQueue","queueMovies","queueMoviesId","getDoc","_ctx","sent","Object","values","includes","target","id","addToWatched","textContent","addToQueue","textContentAdd","textContentRemove","console","log","setDoc","userId","removeFilmById","filmGallery","$69a458246719d1c7$var$posterLargeUrl","$69a458246719d1c7$var$refs","$3vKGz","$69a458246719d1c7$export$605b145a07818080","movie","insertImgCont","ref1","length","original_title","poster_path","backdrop_path","moviePoster","$69a458246719d1c7$export$a30ef51ab559b8","movieBox","title","original_name","popularity","genres","vote_average","vote_count","overview","movieTitle","movieGenres","map","genre","toFixed","join","$69a458246719d1c7$export$d3af4656dcd9770b","querySelector","style","display","$69a458246719d1c7$var$_onMovieCardClick","movieCard","movieCardIdRef","movieId","preventDefault","contains","innerHTML","$b8f9b7833fa37166$export$57f8c9967d0d81f3","fetchMovie","modalBackdrop","window","$69a458246719d1c7$var$onEscPress","fetchMovieVideo","$69a458246719d1c7$var$onMovieModalClose","removeEventListener","code","currentTarget","modalCloseBtn","$57d87adc78ec6cca$export$188cb65847573555","param1","genresDict","results","param","release_date","first_air_date","genre_ids","poster","id1","filmTitle","filmDate","Date","getFullYear","$fab5075d8cb83450$var$fetchMovieGenres","$fab5075d8cb83450$var$_fetchMovieGenres","url","response","$8Mjv6","BASE_URL","API_KEY","$dIxxU","default","get","data","reduce","acc","currentValue","alert","$fab5075d8cb83450$var$fetchTvGenres","$fab5075d8cb83450$var$_fetchTvGenres","$fab5075d8cb83450$export$1598e1643bb93e96","$fab5075d8cb83450$var$_combineGenres","tvGenres","$dDDEV","$49fc2524958c817c$var$refs","$49fc2524958c817c$var$filmsApiService","FilmsApiService","$49fc2524958c817c$var$_onSearch","form","filmOnSearch","query","elements","search","value","trim","$49fc2524958c817c$var$onError","fetchFilmsOnSearch","$49fc2524958c817c$var$clearGalleryContainer","$49fc2524958c817c$var$renderFilmGallery","reset","films","searchForm","$b8f9b7833fa37166$var$refs","$b8f9b7833fa37166$var$renderFilmGallery","$b8f9b7833fa37166$var$_load","fetchFilmsTrending","$b8f9b7833fa37166$var$load"],"version":3,"file":"index.44226fc4.js.map"}