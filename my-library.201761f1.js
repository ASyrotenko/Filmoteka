var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},i={},l=e.parcelRequired7c6;null==l&&((l=function(e){if(e in n)return n[e].exports;if(e in i){var l=i[e];delete i[e];var t={id:e,exports:{}};return n[e]=t,l.call(t.exports,t,t.exports),t.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,n){i[e]=n},e.parcelRequired7c6=l),l("bWo2c"),l("fzYh0");var t=l("fzYh0"),a=l("lpPzL"),r=l("cQLOM");a=l("lpPzL");const o=new(0,r.FilmsApiService),s=(0,a.getRefs)();function c(e){return e.map(f).join("")}async function f(e){const n=await o.fetchMovie(e),i=function(e,n){const{original_name:i,original_title:l,genres:t,vote_average:a,release_date:r,id:o}=e,s=i??l??"",c=t?t.map((e=>e.name)):"";return` <li   class="film__item">\n    \n        <a class="film__link"\n        href="#"\n        >\n          <img id='${o}'\n            class="film__image"\n            ${n?`\n        src="${n}"\n        `:"src = ''"}\n                        alt="Movie: ${s}"\n            loading="lazy"\n          />\n        </a>\n      </div>\n      <div class="film__info">\n      <p class="film__info--text">Watch ${s} online</p>\n      </div>\n      <div class="film__content">\n        ${s?`\n        <h3 class="film__film__title">\n          ${s}</h3>\n        `:""} ${c?`\n        <p class="film__genres">${c.join(", ")}\n        </p>\n        `:""} \n        \n        ${r?`\n        <p class="film__date">| ${new Date(r).getFullYear()}</p>\n        `:""} \n        ${a?`\n        <p class="film__value">${a.toFixed(2)}</p>\n        `:""}\n   \n    </li>\n    `}(n,function({poster_path:e,backdrop_path:n}={}){return`https://image.tmdb.org/t/p/original${e??n??""}`}(n));s.filmGallery.insertAdjacentHTML("beforeend",i)}const d=(0,a.getRefs)(),m=new(0,t.Firebase);async function _(){let e=await m.getDoc("watched");0===e.length?(console.log("ERROR"),d.filmGallery.innerHTML="",d.filmGallery.insertAdjacentHTML("beforeend",'<li class="film__list-error">\n      <p class="library__text">No watched movies found in the library</p>\n      <img src="../images/smile-icon.webp" alt="No watched movies found in the library"/>\n    </li>')):(d.filmGallery.innerHTML="",c(e))}d.watched.addEventListener("click",_),d.queue.addEventListener("click",(async function(){d.watched.classList.remove("film-btn--active");let e=await m.getDoc("queue");0===e.length?(console.log("ERROR"),d.filmGallery.innerHTML="",d.filmGallery.insertAdjacentHTML("beforeend",'<li class="film__list-error">\n        <p class="library__text">No movies saved for viewing were found in the library</p>\n        <img src="../images/smile-icon.webp" alt="No movies saved for viewing were found in the library"/>\n      </li>')):(d.filmGallery.innerHTML="",c(e))}));const p=setInterval((function(e){try{d.watched.classList.add("film-btn--active"),m.userStatus(),console.log("got id"),_(),clearInterval(p)}catch(e){console.log("error")}}),250);l("97fqm"),l("7bYU0");(0,(a=l("lpPzL")).getRefs)();
//# sourceMappingURL=my-library.201761f1.js.map
