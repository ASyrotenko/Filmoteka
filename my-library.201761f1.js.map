{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,aCAAE,EAAAF,EAAA,S,aACO,MAAMG,EAAkB,IAAI,EAAAD,EAAAE,iBAG7BC,GAAO,EAAAC,EAAAC,WAGN,SAASC,EAAcC,GAC5B,OAAOA,EAASC,IAAIC,GAAoBC,KAAK,G,CAG/CC,eAAeF,EAAmBG,GAChC,MAAMC,QAAcZ,EAAgBa,WAAWF,GAEzCG,EAUR,SAAqBF,EAAOG,GAC1B,MAAMC,cACJA,EAAaC,eACbA,EAAcC,OACdA,EAAMC,aACNA,EAAYC,aACZA,EAAYC,GACZA,GACET,EAEEU,EAAaN,GAAiBC,GAAkB,GAChDM,EAAcL,EAASA,EAAOX,KAAIiB,GAASA,EAAMC,OAAQ,GAE/D,MAAO,oHAKYJ,oDAGPN,EACI,kBACHA,eAEG,mDAEoBO,qJAMIA,0EAIhCA,EACI,uDAEFA,mBAEE,MAEVC,EACI,qCAC0BA,EAAYd,KAAK,gCAG3C,0BAIEW,EACI,qCACoB,IAAIM,KAAKN,GAAcO,8BAE3C,gBAGJR,EACI,oCACmBA,EAAaS,QAAQ,mBAExC,0B,CA1EGC,CAAYjB,EAI7B,UAA6BkB,YAAEA,EAAWC,cAAEA,GAAkB,IAG5D,MADe,sCADKD,GAAeC,GAAiB,I,CANrCC,CAAoBpB,IAEnCV,EAAK+B,YAAYC,mBAAmB,YAAapB,E,CDZnD,MAAMqB,GAAO,EAAAhC,EAAAC,WAEPgC,EAAW,IAAI,EAAAtC,EAAAuC,UAKrB3B,eAAe4B,IACb,IAAIC,QAAgBH,EAASI,OAAO,WACb,IAAnBD,EAAQE,QACVC,QAAQC,IAAI,SACZR,EAAKF,YAAYW,UAAY,GAC7BT,EAAKF,YAAYC,mBACf,YACA,oNAMFC,EAAKF,YAAYW,UAAY,GAC7BvC,EAAckC,G,CAjBlBJ,EAAKI,QAAQM,iBAAiB,QAASP,GACvCH,EAAKW,MAAMD,iBAAiB,SAqB5BnC,iBACEyB,EAAKI,QAAQQ,UAAUC,OAAO,oBAC9B,IAAIF,QAAcV,EAASI,OAAO,SAEb,IAAjBM,EAAML,QACRC,QAAQC,IAAI,SACZR,EAAKF,YAAYW,UAAY,GAC7BT,EAAKF,YAAYC,mBACf,YACA,wPAMFC,EAAKF,YAAYW,UAAY,GAC7BvC,EAAcyC,G,IAIlB,MAAMG,EAAMC,aAEZ,SAAuBC,GACrB,IACEhB,EAAKI,QAAQQ,UAAUK,IAAI,oBAC3BhB,EAASiB,aACTX,QAAQC,IAAI,UACZL,IACAgB,cAAcL,E,CACd,MAAOM,GACPb,QAAQC,IAAI,Q,IAVuB,K,uBDzC1B,G,cAAAvC","sources":["src/my-library.js","src/js/firebase-db-library.js","src/js/library-gallery.js"],"sourcesContent":["import './js/firebase-auth';\nimport './js/firebase-class';\nimport './js/firebase-db-library';\nimport './js/change-color-scheme.js';\nimport './js/modal-team';\n// import './js/movie-card';\n\nimport { getRefs } from './js/get-refs';\nconst refs = getRefs();\n\n// function triggerBtnClick() {\n//   setTimeout(() => {\n//     refs.watched.click();\n//   }, 1000);\n// }\n// window.addEventListener('load', refs.watched.click());\n// window.addEventListener('load', refs.watched.classList.add('film-btn--active'));\n","import { Firebase } from './firebase-class';\nimport { getRefs } from './get-refs';\nimport { renderLibrary } from './library-gallery';\nconst refs = getRefs();\n\nconst firebase = new Firebase();\n\nrefs.watched.addEventListener('click', showWatched);\nrefs.queue.addEventListener('click', showQueue);\n\nasync function showWatched() {\n  let watched = await firebase.getDoc('watched');\n  if (watched.length === 0) {\n    console.log('ERROR');\n    refs.filmGallery.innerHTML = '';\n    refs.filmGallery.insertAdjacentHTML(\n      'beforeend',\n      `<li class=\"film__list-error\">\n      <p class=\"library__text\">No watched movies found in the library</p>\n      <img src=\"../images/smile-icon.webp\" alt=\"No watched movies found in the library\"/>\n    </li>`\n    );\n  } else {\n    refs.filmGallery.innerHTML = '';\n    renderLibrary(watched);\n    // console.log(watched);\n  }\n}\n\nasync function showQueue() {\n  refs.watched.classList.remove('film-btn--active');\n  let queue = await firebase.getDoc('queue');\n\n  if (queue.length === 0) {\n    console.log('ERROR');\n    refs.filmGallery.innerHTML = '';\n    refs.filmGallery.insertAdjacentHTML(\n      'beforeend',\n      `<li class=\"film__list-error\">\n        <p class=\"library__text\">No movies saved for viewing were found in the library</p>\n        <img src=\"../images/smile-icon.webp\" alt=\"No movies saved for viewing were found in the library\"/>\n      </li>`\n    );\n  } else {\n    refs.filmGallery.innerHTML = '';\n    renderLibrary(queue);\n    // console.log(queue);\n  }\n}\nconst qwe = setInterval(getUserStatus, 250);\n\nfunction getUserStatus(params) {\n  try {\n    refs.watched.classList.add('film-btn--active');\n    firebase.userStatus();\n    console.log('got id');\n    showWatched();\n    clearInterval(qwe);\n  } catch (error) {\n    console.log('error');\n  }\n}\n","import { FilmsApiService } from './films-service';\nexport const filmsApiService = new FilmsApiService();\nimport { getRefs } from './get-refs';\n\nconst refs = getRefs();\nconst posterLargeUrl = 'https://image.tmdb.org/t/p/original';\n\nexport function renderLibrary(filmsIds) {\n  return filmsIds.map(renderMovieCardLib).join('');\n}\n\nasync function renderMovieCardLib(movieId) {\n  const movie = await filmsApiService.fetchMovie(movieId);\n  const poster = getPosterForLibCard(movie);\n  const markup = movieTplLib(movie, poster);\n  refs.filmGallery.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction getPosterForLibCard({ poster_path, backdrop_path } = {}) {\n  const moviePoster = poster_path ?? backdrop_path ?? '';\n  const imgUrl = `${posterLargeUrl}${moviePoster}`;\n  return imgUrl;\n}\n\nfunction movieTplLib(movie, poster) {\n  const {\n    original_name,\n    original_title,\n    genres,\n    vote_average,\n    release_date,\n    id,\n  } = movie;\n\n  const movieTitle = original_name ?? original_title ?? '';\n  const movieGenres = genres ? genres.map(genre => genre.name) : '';\n\n  return ` <li   class=\"film__item\">\n    \n        <a class=\"film__link\"\n        href=\"#\"\n        >\n          <img id='${id}'\n            class=\"film__image\"\n            ${\n              poster\n                ? `\n        src=\"${poster}\"\n        `\n                : `src = ''`\n            }\n                        alt=\"Movie: ${movieTitle}\"\n            loading=\"lazy\"\n          />\n        </a>\n      </div>\n      <div class=\"film__info\">\n      <p class=\"film__info--text\">Watch ${movieTitle} online</p>\n      </div>\n      <div class=\"film__content\">\n        ${\n          movieTitle\n            ? `\n        <h3 class=\"film__film__title\">\n          ${movieTitle}</h3>\n        `\n            : ''\n        } ${\n    movieGenres\n      ? `\n        <p class=\"film__genres\">${movieGenres.join(', ')}\n        </p>\n        `\n      : ''\n  } \n        \n        ${\n          release_date\n            ? `\n        <p class=\"film__date\">| ${new Date(release_date).getFullYear()}</p>\n        `\n            : ''\n        } \n        ${\n          vote_average\n            ? `\n        <p class=\"film__value\">${vote_average.toFixed(2)}</p>\n        `\n            : ''\n        }\n   \n    </li>\n    `;\n}\n"],"names":["parcelRequire","$fzYh0","$cQLOM","$fc5a387510d6563b$export$57f8c9967d0d81f3","FilmsApiService","$fc5a387510d6563b$var$refs","$lpPzL","getRefs","$fc5a387510d6563b$export$e7d1a4959038c5e5","filmsIds","map","$fc5a387510d6563b$var$renderMovieCardLib","join","async","movieId","movie","fetchMovie","markup","poster","original_name","original_title","genres","vote_average","release_date","id","movieTitle","movieGenres","genre","name","Date","getFullYear","toFixed","$fc5a387510d6563b$var$movieTplLib","poster_path","backdrop_path","$fc5a387510d6563b$var$getPosterForLibCard","filmGallery","insertAdjacentHTML","$22070eaa231eed7e$var$refs","$22070eaa231eed7e$var$firebase","Firebase","$22070eaa231eed7e$var$showWatched","watched","getDoc","length","console","log","innerHTML","addEventListener","queue","classList","remove","$22070eaa231eed7e$var$qwe","setInterval","params","add","userStatus","clearInterval","error"],"version":3,"file":"my-library.201761f1.js.map"}