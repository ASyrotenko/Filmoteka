{"mappings":"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","sources":["src/index.js","src/js/addvideo.js","src/js/movie-card.js","src/js/search-movie.js","src/js/films-gallery.js","src/js/get-genres.js","src/js/backToTop.js"],"sourcesContent":["import './js/modal-team';\nimport './js/addvideo';\nimport './js/firebase-auth';\nimport './js/firebase-db-index';\nimport './js/firebase-class';\nimport './js/movie-card';\nimport './js/search-movie';\nimport './js/change-color-scheme.js';\nimport './js/library-auth';\nimport './js/backToTop';\n// import './js/pagination';\n\nimport { FilmsApiService } from './js/films-service';\nimport { filmTpl } from './js/films-gallery';\nimport { getRefs } from './js/get-refs';\nimport { combineGenres } from './js/get-genres';\n// import { pagination } from './js/pagination';\nconst refs = getRefs();\n\nfunction renderFilmGallery(films, genres) {\n  refs.filmGallery.insertAdjacentHTML('beforeend', filmTpl(films, genres));\n  //remove spinner\n  document.querySelector('.spinner').style.display = 'none';\n}\n\nexport const filmsApiService = new FilmsApiService();\nasync function load() {\n  const genres = await combineGenres();\n  const filmsTrending = await filmsApiService.fetchFilmsTrending();\n  renderFilmGallery(filmsTrending, genres);\n}\nload();\n","import { getRefs } from './get-refs';\nconst refs = getRefs();\nimport { filmsApiService } from '../index';\n\nconst stopVideos = () => {\n  document.querySelectorAll('iframe').forEach(v => {\n    v.src = v.src;\n  });\n  document.querySelectorAll('video').forEach(v => {\n    v.pause();\n  });\n};\n\nrefs.trailerOverlay.addEventListener('click', showVideo);\nrefs.closeVideoBtn.addEventListener('click', closeVideo);\nrefs.watchBtn.addEventListener('click', showVideo);\n\nfunction videoTpl(trailer) {\n  const { key, site } = trailer;\n\n  return `<iframe class=\"iframe\" width=\"100%\" height=\"100%\" src=\"https://www.${site}.com/embed/${key}?origin=https://asyrotenko.github.io\" title=\"video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media;\n    gyroscope; picture-in-picture\" allowfullscreen></iframe>`;\n}\n\nexport function renderVideoBox(videos) {\n  const trailer = videos.find(video => video.name === 'Official Trailer' ?? {});\n  if (!trailer) {\n    refs.watchBtn.classList.add('not-active');\n    refs.trailerOverlay.classList.add('not-active');\n    return;\n  }\n  refs.insertVideoCont.insertAdjacentHTML('beforeend', videoTpl(trailer));\n}\n\nexport async function showVideo() {\n  refs.insertVideoCont.classList.add('is-active');\n  refs.trailerBox.classList.add('is-active');\n  refs.watchBtn.setAttribute('disabled', ' ');\n  refs.closeVideoBtn.removeAttribute('disabled');\n  refs.insertVideoCont.scrollIntoView();\n}\n\nexport function closeVideo() {\n  stopVideos();\n  refs.insertVideoCont.classList.remove('is-active');\n  refs.trailerBox.classList.remove('is-active');\n  refs.closeVideoBtn.setAttribute('disabled', '');\n  refs.watchBtn.removeAttribute('disabled');\n}\n","import { filmsApiService } from '../index';\nimport { getRefs } from './get-refs';\nimport { closeVideo, renderVideoBox } from './addvideo';\n\nconst refs = getRefs();\n\nconst backdrop = document.querySelector('.backdrop');\nbackdrop.addEventListener('click', backdropClick);\n\nexport function renderMovieCard(movie, path) {\n  refs.insertImgCont.insertAdjacentHTML('beforeend', getPosterForCard(path));\n  refs.movieBox.insertAdjacentHTML('beforeend', movieCardTpl(movie));\n  document.querySelector('.spinner').style.display = 'none';\n}\nexport function movieCardTpl(movie) {\n  const {\n    title,\n    original_name,\n    original_title,\n    popularity,\n    genres,\n    vote_average,\n    vote_count,\n    overview,\n    id,\n  } = movie;\n\n  const movieTitle = original_name ?? original_title ?? '';\n  const movieGenres = genres ? genres.map(genre => genre.name) : '';\n\n  return `\n  <div class=\"movie__id\" id=\"${id}\" ><h2 class=\"movie-card__title\">\n    ${title ?? movieTitle}\n    </h2>\n  <div class=\"movie__info-container\">\n<table class=\"movie-info__table\">\n  <tr>\n    ${\n      vote_count\n        ? `\n            <td class=\"movie__info-item\">Vote / Votes</td>\n        `\n        : ''\n    }\n    ${\n      vote_count\n        ? `\n            <td class=\"movie__info-data\"><span class=\"td-box\">${vote_average.toFixed(\n              1\n            )}</span> / ${vote_count}</td>\n        `\n        : ''\n    }\n    \n  </tr>\n  <tr>\n    ${\n      popularity\n        ? `\n            <td class=\"movie__info-item\">Popularity</td>\n        `\n        : ''\n    }\n    ${\n      popularity\n        ? `\n            <td class=\"movie__info-data\">${popularity.toFixed(1)}</td>\n        `\n        : ''\n    }\n  </tr>\n  <tr>\n     ${\n       movieTitle\n         ? `\n                <td class=\"movie__info-item\">Original Title</td>\n        `\n         : ''\n     }\n    ${\n      movieTitle\n        ? `\n                <td class=\"movie__info-data movie__info-data--title\">${movieTitle}</td>\n        `\n        : ''\n    }\n  </tr>\n    <tr>\n    ${movieGenres ? `<td class=\"movie__info-item\">Genre</td>` : ''}\n    ${\n      movieGenres\n        ? `<td class=\"movie__info-data\">${movieGenres.join(', ')}</td>`\n        : ''\n    }\n  </tr>\n</table>\n</div>\n${\n  overview\n    ? `\n    <h3 class=\"movie__about\">About</h3> `\n    : ''\n}\n${\n  overview\n    ? `\n    <p class=\"movie__about-info\">${overview}</p> `\n    : ''\n}\n</div>`;\n}\n\nexport function getPosterForCard(path) {\n  return `\n         <img\n  class=\"movie__poster\"\n  ${\n    path\n      ? `\n    srcset=\"\n    https://image.tmdb.org/t/p/w300/${path}      300w,\n    https://image.tmdb.org/t/p/w500/${path}      500w,\n    https://image.tmdb.org/t/p/w780/${path}      780w,\n    https://image.tmdb.org/t/p/w1280/${path}    1280w,\n    https://image.tmdb.org/t/p/original/${path} 2000w\n  \"\n  src=\"https://image.tmdb.org/t/p/w300/${path}\"\n  sizes=\"(min-width:1280px) 375px, (min-width:768px) 264px, 100vw\"\n\n  \n  `\n      : `src=\"https://upload.wikimedia.org/wikipedia/commons/f/f9/No-image-available.jpg\"\n  `\n  }\n  alt=\"Movie title\"\n/>\n`;\n}\n\nrefs.filmGallery.addEventListener('click', onMovieCardClick);\n\nasync function onMovieCardClick(e) {\n  e.preventDefault();\n\n  if (!e.target.classList.contains('film__image')) {\n    return;\n  }\n\n  refs.insertImgCont.innerHTML = '';\n  refs.movieBox.innerHTML = '';\n  refs.watchBtn.classList.remove('not-active');\n\n  const movieCard = await filmsApiService.fetchMovie(e.target.id);\n  if (!movieCard) {\n    return;\n    // Вивести повідомлення про помилку!!!!\n  }\n\n  refs.modalBackdrop.classList.remove('is-hidden');\n  window.addEventListener('keydown', onEscPress);\n  document.querySelector('body').classList.add('modal-open');\n  let path = e.target.dataset.imgpath;\n  renderMovieCard(movieCard, path);\n  const movieCardIdRef = document.querySelector('.movie__id');\n  const movieId = movieCardIdRef.id;\n  const videos = await filmsApiService.fetchMovieVideo(movieId);\n  renderVideoBox(videos);\n}\n\nrefs.modalCloseBtn.addEventListener('click', onMovieModalClose);\n\nfunction onMovieModalClose(e) {\n  refs.trailerOverlay.classList.remove('not-active');\n\n  refs.modalBackdrop.classList.add('is-hidden');\n  window.removeEventListener('keydown', onEscPress);\n  closeVideo();\n  document.querySelector('body').classList.remove('modal-open');\n  refs.insertVideoCont.innerHTML = ' ';\n\n  refs.addToWatched.textContent = 'add to watched';\n  refs.addToWatched.classList.remove('film-btn--active');\n  refs.addToQueue.textContent = 'add to queue';\n  refs.addToQueue.classList.remove('film-btn--active');\n}\n\nfunction onEscPress(e) {\n  if (e.code === 'Escape') {\n    onMovieModalClose();\n  }\n}\n\nfunction backdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onMovieModalClose();\n  }\n}\n","import { getRefs } from './get-refs';\nimport { FilmsApiService } from './films-service';\nimport { filmTpl } from './films-gallery';\nimport { combineGenres } from './get-genres';\n\nconst refs = getRefs();\n\nconst filmsApiService = new FilmsApiService();\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nasync function onSearch(e) {\n  e.preventDefault();\n  const form = e.target;\n  filmsApiService.query = e.target.elements.search.value.trim();\n\n  if (filmsApiService.query === '') {\n    onError();\n    return;\n  }\n  const genres = await combineGenres();\n  const filmOnSearch = await filmsApiService.fetchFilmsOnSearch(\n    filmsApiService.query\n  );\n  clearGalleryContainer();\n  renderFilmGallery(filmOnSearch, genres);\n  form.reset();\n}\n\nfunction onError() {\n  alert('Please type something');\n  console.log('ERROR');\n}\n\nfunction renderFilmGallery(films, genres) {\n  refs.filmGallery.insertAdjacentHTML('beforeend', filmTpl(films, genres));\n}\n\nfunction clearGalleryContainer() {\n  refs.filmGallery.innerHTML = '';\n}\n","export function filmTpl({ results }, genresDict) {\n  return results\n    .map(\n      ({\n        original_name,\n        original_title,\n        release_date,\n        first_air_date,\n        genre_ids,\n        vote_count,\n        vote_average,\n        poster_path: poster,\n        id,\n      }) => {\n        const filmTitle = original_name ?? original_title ?? '';\n        const filmDate = release_date ?? first_air_date ?? '';\n\n        return ` <li   class=\"film__item\">\n    \n        <a class=\"film__link\"\n        href=\"#\"\n        >\n          <img\n  id=\"${id}\"\n    data-imgpath=${poster}\n  class=\"film__image\"\n  ${\n    poster\n      ? `\n  srcset=\"\n    https://image.tmdb.org/t/p/w300/${poster}      300w,\n    https://image.tmdb.org/t/p/w500/${poster}      500w,\n    https://image.tmdb.org/t/p/w780/${poster}      780w,\n    https://image.tmdb.org/t/p/w1280/${poster}    1280w,\n    https://image.tmdb.org/t/p/original/${poster} 2000w\n  \"\n  loading=\"lazy\"\n  src=\"https://image.tmdb.org/t/p/w300/${poster}\"\n    sizes=\"(min-width:1200px) 33vw, (min-width:768px) 50vw, 100vw\"\n\n  `\n      : `src=\"https://upload.wikimedia.org/wikipedia/commons/f/f9/No-image-available.jpg\"\n  `\n  }\n  alt=\"Movie: ${filmTitle}\"\n/>\n        </a>\n        <div class=\"film__info\">\n          <div class=\"aver-rate\">\n            <p class=\"film__info--text\"> Average rate ${vote_average.toFixed(\n              1\n            )} </p>\n          </div>\n          <div class=\"votes-amount\">\n            <p class=\"film__info--text\"> Votes ${vote_count}</p>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"film__content\">\n        ${\n          filmTitle\n            ? `\n        <h3 class=\"film__film__title\">\n          ${filmTitle}</h3>\n        `\n            : ''\n        } ${\n          genre_ids\n            ? `\n        <p class=\"film__genres\">${genre_ids\n          .map(id => genresDict[id])\n          .join(', ')}\n        </p>\n        `\n            : ''\n        } \n\n        ${\n          filmDate\n            ? `\n        <p class=\"film__date\">| ${new Date(filmDate).getFullYear()}</p>\n        `\n            : ''\n        } \n   \n    </li>\n    `;\n      }\n    )\n    .join('');\n}\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './films-service';\n\nasync function fetchMovieGenres() {\n  try {\n    const url = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data.genres.reduce((acc, currentValue) => {\n      acc[currentValue.id] = currentValue.name;\n\n      return acc;\n    }, {});\n  } catch (error) {\n    alert('ERRORgenres');\n  }\n}\n\nasync function fetchTvGenres() {\n  try {\n    const url = `${BASE_URL}/genre/tv/list?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data.genres.reduce((acc, currentValue) => {\n      acc[currentValue.id] = currentValue.name;\n\n      return acc;\n    }, {});\n  } catch (error) {\n    alert('ERRORTvgenres');\n  }\n}\n\nexport async function combineGenres() {\n  const movieGenres = await fetchMovieGenres();\n  const tvGenres = await fetchTvGenres();\n  const genres = { ...movieGenres, ...tvGenres };\n  return genres;\n}\n","import { getRefs } from './get-refs';\nconst refs = getRefs();\n\nconst btnUp = {\n  el: refs.btnUp,\n  show() {\n    this.el.classList.remove('btn-up_hide');\n  },\n  hide() {\n    this.el.classList.add('btn-up_hide');\n  },\n\n  addEventListener() {\n    window.addEventListener('scroll', () => {\n      const scrollY = window.scrollY || document.documentElement.scrollTop;\n      scrollY > 900 ? this.show() : this.hide();\n    });\n    document.querySelector('.btn-up').onclick = () => {\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n  },\n};\n\nbtnUp.addEventListener();\n"],"names":["parcelRequire","$00aff065e868c198$var$refs","$lpPzL","getRefs","$00aff065e868c198$export$4c07ddf2d98a14f0","videos","trailer","find","video","name","watchBtn","classList","add","trailerOverlay","insertVideoCont","insertAdjacentHTML","key","site","$00aff065e868c198$var$videoTpl","async","$00aff065e868c198$export$3949c78fa34dc1d0","trailerBox","setAttribute","closeVideoBtn","removeAttribute","scrollIntoView","$00aff065e868c198$export$add73491473b3471","document","querySelectorAll","forEach","v","src","pause","remove","addEventListener","$00a862f89aaa0a72$var$refs","$00a862f89aaa0a72$var$onMovieModalClose","e","modalBackdrop","window","removeEventListener","$00a862f89aaa0a72$var$onEscPress","querySelector","innerHTML","addToWatched","textContent","addToQueue","code","currentTarget","target","filmGallery","preventDefault","contains","insertImgCont","movieBox","movieCard","$1f0dc3b9307be026$export$57f8c9967d0d81f3","fetchMovie","id","path","dataset","imgpath","movie","$00a862f89aaa0a72$export$a30ef51ab559b8","title","original_name","original_title","popularity","genres","vote_average","vote_count","overview","movieTitle","movieGenres","map","genre","toFixed","join","$00a862f89aaa0a72$export$d3af4656dcd9770b","style","display","$00a862f89aaa0a72$export$605b145a07818080","movieId","fetchMovieVideo","modalCloseBtn","$eb5b4b6d39880dcf$export$188cb65847573555","results","genresDict","release_date","first_air_date","genre_ids","poster_path","poster","id1","filmTitle","filmDate","Date","getFullYear","$2shzp","$1c71b2a1096765e9$export$1598e1643bb93e96","url","$cQLOM","BASE_URL","API_KEY","default","get","data","reduce","acc","currentValue","error","alert","$1c71b2a1096765e9$var$fetchMovieGenres","$1c71b2a1096765e9$var$fetchTvGenres","$71009b01fa8718e8$var$refs","$71009b01fa8718e8$var$filmsApiService","FilmsApiService","searchForm","form","query","elements","search","value","trim","console","log","filmOnSearch","fetchFilmsOnSearch","films","$71009b01fa8718e8$var$renderFilmGallery","reset","el","btnUp","show","this","hide","scrollY","documentElement","scrollTop","onclick","scrollTo","top","left","behavior","$1f0dc3b9307be026$var$refs","$1f0dc3b9307be026$var$renderFilmGallery","fetchFilmsTrending","$1f0dc3b9307be026$var$load"],"version":3,"file":"index.2f65d12f.js.map"}