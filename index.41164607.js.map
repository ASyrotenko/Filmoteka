{"mappings":"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","sources":["src/index.js","src/js/addvideo.js","src/js/firebase-db-index.js","src/js/movie-card.js","src/js/search-movie.js","src/js/films-gallery.js","src/js/get-genres.js"],"sourcesContent":["import './js/modal-team';\nimport './js/addvideo';\nimport './js/firebase-auth';\nimport './js/firebase-db-index';\nimport './js/firebase-class';\nimport './js/movie-card';\nimport './js/search-movie';\nimport './js/change-color-scheme.js';\n// import './js/pagination';\n\nimport { FilmsApiService } from './js/films-service';\nimport { filmTpl } from './js/films-gallery';\nimport { getRefs } from './js/get-refs';\nimport { combineGenres } from './js/get-genres';\n// import { pagination } from './js/pagination';\nconst refs = getRefs();\n\nfunction renderFilmGallery(films, genres) {\n  refs.filmGallery.insertAdjacentHTML('beforeend', filmTpl(films, genres));\n  //remove spinner\n  document.querySelector('.spinner').style.display = 'none';\n}\n\nexport const filmsApiService = new FilmsApiService();\nasync function load() {\n  const genres = await combineGenres();\n  const filmsTrending = await filmsApiService.fetchFilmsTrending();\n  renderFilmGallery(filmsTrending, genres);\n}\nload();\n","import { getRefs } from './get-refs';\nconst refs = getRefs();\nimport { filmsApiService } from '../index';\n\nconst stopVideos = () => {\n  document.querySelectorAll('iframe').forEach(v => {\n    v.src = v.src;\n  });\n  document.querySelectorAll('video').forEach(v => {\n    v.pause();\n  });\n};\n\nrefs.trailerOverlay.addEventListener('click', showVideo);\nrefs.closeVideoBtn.addEventListener('click', closeVideo);\nrefs.watchBtn.addEventListener('click', showVideo);\n\nfunction videoTpl(trailer) {\n  const { key, site } = trailer;\n\n  return `<iframe class=\"iframe\" width=\"100%\" height=\"100%\" src=\"https://www.${site}.com/embed/${key}?origin=https://asyrotenko.github.io\" title=\"video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media;\n    gyroscope; picture-in-picture\" allowfullscreen></iframe>`;\n}\n\nexport function renderVideoBox(videos) {\n  const trailer = videos.find(video => video.name === 'Official Trailer' ?? {});\n  if (!trailer) {\n    refs.watchBtn.classList.add('not-active');\n    refs.trailerOverlay.classList.add('not-active');\n    return;\n  }\n  refs.insertVideoCont.insertAdjacentHTML('beforeend', videoTpl(trailer));\n}\n\nexport async function showVideo() {\n  refs.insertVideoCont.classList.add('is-active');\n  refs.trailerBox.classList.add('is-active');\n  refs.watchBtn.setAttribute('disabled', ' ');\n  refs.closeVideoBtn.removeAttribute('disabled');\n  refs.insertVideoCont.scrollIntoView();\n}\n\nexport function closeVideo() {\n  stopVideos();\n  refs.insertVideoCont.classList.remove('is-active');\n  refs.trailerBox.classList.remove('is-active');\n  refs.closeVideoBtn.setAttribute('disabled', '');\n  refs.watchBtn.removeAttribute('disabled');\n}\n","import { Firebase } from './firebase-class';\nimport { getRefs } from './get-refs';\n\nconst refs = getRefs();\n\nconst firebase = new Firebase();\n\nrefs.addToWatched.addEventListener('click', pullToWatched);\nrefs.addToQueue.addEventListener('click', pullToQueue);\nrefs.filmGallery.addEventListener('click', getMovieStatus);\n\nasync function getMovieStatus(e) {\n  const textContentRemoveWatched = 'remove from watched';\n  const watchedMovies = await firebase.getDoc('watched');\n  const watchedMoviesId = Object.values(watchedMovies);\n  const currentWatchedMovieStatus = watchedMoviesId.includes(e.target.id);\n\n  if (currentWatchedMovieStatus) {\n    refs.addToWatched.textContent = textContentRemoveWatched;\n    refs.addToWatched.classList.add('film-btn--active');\n  }\n\n  const textContentRemoveQueue = 'remove from queue';\n  const queueMovies = await firebase.getDoc('queue');\n  const queueMoviesId = Object.values(queueMovies);\n  const currentQueueMovieStatus = queueMoviesId.includes(e.target.id);\n\n  if (currentQueueMovieStatus) {\n    refs.addToQueue.textContent = textContentRemoveQueue;\n    refs.addToQueue.classList.add('film-btn--active');\n  }\n}\n\nfunction pullToWatched(e) {\n  const textContentAdd = 'add to watched';\n  const textContentRemove = 'remove from watched';\n  console.log(firebase.setDoc.userId);\n  if (e.target.textContent.includes(textContentAdd)) {\n    e.target.textContent = textContentRemove;\n    firebase.setDoc('watched');\n    firebase.removeFilmById('queue');\n    refs.addToQueue.textContent = 'add to queue';\n    refs.addToQueue.classList.remove('film-btn--active');\n  } else if (e.target.textContent.includes(textContentRemove)) {\n    e.target.textContent = textContentAdd;\n    firebase.removeFilmById('watched');\n    refs.addToWatched.classList.remove('film-btn--active');\n  }\n}\n\nfunction pullToQueue(e) {\n  const textContentAdd = 'add to queue';\n  const textContentRemove = 'remove from queue';\n  if (e.target.textContent.includes(textContentAdd)) {\n    e.target.textContent = textContentRemove;\n    firebase.setDoc('queue');\n    firebase.removeFilmById('watched');\n    refs.addToWatched.textContent = 'add to watched';\n    refs.addToWatched.classList.remove('film-btn--active');\n  } else if (e.target.textContent.includes(textContentRemove)) {\n    e.target.textContent = textContentAdd;\n    firebase.removeFilmById('queue');\n    refs.addToQueue.classList.remove('film-btn--active');\n  }\n}\n","// const posterUrl = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\nconst posterLargeUrl = 'https://image.tmdb.org/t/p/original';\n// const posterLargeUrl = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2';\nimport { filmsApiService } from '../index';\nimport { getRefs } from './get-refs';\nimport { closeVideo, renderVideoBox } from './addvideo';\n\nconst refs = getRefs();\n\nconst backdrop = document.querySelector('.backdrop');\nbackdrop.addEventListener('click', backdropClick);\n\nexport function renderMovieCard(movie) {\n  refs.insertImgCont.insertAdjacentHTML('beforeend', getPosterForCard(movie));\n  refs.movieBox.insertAdjacentHTML('beforeend', movieCardTpl(movie));\n  document.querySelector('.spinner').style.display = 'none';\n}\nexport function movieCardTpl(movie) {\n  const {\n    title,\n    original_name,\n    original_title,\n    popularity,\n    genres,\n    vote_average,\n    vote_count,\n    overview,\n    id,\n    video,\n  } = movie;\n\n  const movieTitle = original_name ?? original_title ?? '';\n  const movieGenres = genres ? genres.map(genre => genre.name) : '';\n\n  return `\n  <div class=\"img-box\"></div>\n  <div class=\"movie__id\" id=\"${id}\" ><h2 class=\"movie-card__title\">\n    ${title ?? movieTitle}\n    </h2>\n  <div class=\"movie__info-container\">\n<table class=\"movie-info__table\">\n  <tr>\n    ${\n      vote_count\n        ? `\n            <td class=\"movie__info-item\">Vote / Votes</td>\n        `\n        : ''\n    }\n    ${\n      vote_count\n        ? `\n            <td class=\"movie__info-data\"><span class=\"td-box\">${vote_average.toFixed(\n              1\n            )}</span> / ${vote_count}</td>\n        `\n        : ''\n    }\n    \n  </tr>\n  <tr>\n    ${\n      popularity\n        ? `\n            <td class=\"movie__info-item\">Popularity</td>\n        `\n        : ''\n    }\n    ${\n      popularity\n        ? `\n            <td class=\"movie__info-data\">${popularity.toFixed(1)}</td>\n        `\n        : ''\n    }\n  </tr>\n  <tr>\n     ${\n       movieTitle\n         ? `\n                <td class=\"movie__info-item\">Original Title</td>\n        `\n         : ''\n     }\n    ${\n      movieTitle\n        ? `\n                <td class=\"movie__info-data movie__info-data--title\">${movieTitle}</td>\n        `\n        : ''\n    }\n  </tr>\n    <tr>\n    ${movieGenres ? `<td class=\"movie__info-item\">Genre</td>` : ''}\n    ${\n      movieGenres\n        ? `<td class=\"movie__info-data\">${movieGenres.join(', ')}</td>`\n        : ''\n    }\n  </tr>\n</table>\n</div>\n${\n  overview\n    ? `\n    <h3 class=\"movie__about\">About</h3> `\n    : ''\n}\n${\n  overview\n    ? `\n    <p class=\"movie__about-info\">${overview}</p> `\n    : ''\n}\n</div>`;\n}\n\nexport function getPosterForCard({\n  original_title,\n  poster_path,\n  backdrop_path,\n} = {}) {\n  const moviePoster = poster_path ?? backdrop_path ?? '';\n  return `\n             <img\n            class=\"movie__poster\"\n            ${\n              moviePoster\n                ? `\n        src=\"${posterLargeUrl}${moviePoster}\"\n        `\n                : `src = ''`\n            }\n                        alt=\"Movie: ${original_title ?? ''}\"\n          />\n`;\n}\n\nrefs.filmGallery.addEventListener('click', onMovieCardClick);\n\nasync function onMovieCardClick(e) {\n  e.preventDefault();\n\n  if (!e.target.classList.contains('film__image')) {\n    return;\n  }\n\n  refs.insertImgCont.innerHTML = '';\n  refs.movieBox.innerHTML = '';\n  refs.watchBtn.classList.remove('not-active');\n\n  const movieCard = await filmsApiService.fetchMovie(e.target.id);\n  if (!movieCard) {\n    return;\n    // Вивести повідомлення про помилку!!!!\n  }\n\n  refs.modalBackdrop.classList.remove('is-hidden');\n  window.addEventListener('keydown', onEscPress);\n  document.querySelector('body').classList.add('modal-open');\n  renderMovieCard(movieCard);\n  const movieCardIdRef = document.querySelector('.movie__id');\n  const movieId = movieCardIdRef.id;\n  const videos = await filmsApiService.fetchMovieVideo(movieId);\n  renderVideoBox(videos);\n}\n\nrefs.modalCloseBtn.addEventListener('click', onMovieModalClose);\n\nfunction onMovieModalClose(e) {\n  refs.trailerOverlay.classList.remove('not-active');\n\n  refs.modalBackdrop.classList.add('is-hidden');\n  window.removeEventListener('keydown', onEscPress);\n  closeVideo();\n  document.querySelector('body').classList.remove('modal-open');\n  refs.insertVideoCont.innerHTML = ' ';\n\n  refs.addToWatched.textContent = 'add to watched';\n  refs.addToWatched.classList.remove('film-btn--active');\n  refs.addToQueue.textContent = 'add to queue';\n  refs.addToQueue.classList.remove('film-btn--active');\n}\n\nfunction onEscPress(e) {\n  if (e.code === 'Escape') {\n    onMovieModalClose();\n  }\n}\n\nfunction backdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onMovieModalClose();\n  }\n}\n","import { getRefs } from './get-refs';\nimport { FilmsApiService } from './films-service';\nimport { filmTpl } from './films-gallery';\nimport { combineGenres } from './get-genres';\n\nconst refs = getRefs();\n\nconst filmsApiService = new FilmsApiService();\n\nrefs.searchForm.addEventListener('submit', onSearch);\n\nasync function onSearch(e) {\n  e.preventDefault();\n  const form = e.target;\n  filmsApiService.query = e.target.elements.search.value.trim();\n\n  if (filmsApiService.query === '') {\n    onError();\n    return;\n  }\n  const genres = await combineGenres();\n  const filmOnSearch = await filmsApiService.fetchFilmsOnSearch(\n    filmsApiService.query\n  );\n  clearGalleryContainer();\n  renderFilmGallery(filmOnSearch, genres);\n  form.reset();\n}\n\nfunction onError() {\n  alert('Please type something');\n  console.log('ERROR');\n}\n\nfunction renderFilmGallery(films, genres) {\n  refs.filmGallery.insertAdjacentHTML('beforeend', filmTpl(films, genres));\n}\n\nfunction clearGalleryContainer() {\n  refs.filmGallery.innerHTML = '';\n}\n","const posterUrl = 'https://www.themoviedb.org/t/p/w220_and_h330_face';\nconst posterLargeUrl = 'https://image.tmdb.org/t/p/original';\n// const posterLargeUrl = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2';\n// import { filmsApiService } from '../index';\n//image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg\n\nexport function filmTpl({ results }, genresDict) {\n  return results\n    .map(\n      ({\n        original_name,\n        original_title,\n        release_date,\n        first_air_date,\n        genre_ids,\n        vote_average: votes,\n        poster_path: poster,\n        id,\n      }) => {\n        const filmTitle = original_name ?? original_title ?? '';\n        const filmDate = release_date ?? first_air_date ?? '';\n        return ` <li   class=\"film__item\">\n    \n        <a class=\"film__link\"\n        href=\"#\"\n        >\n          <img id='${id}'\n            class=\"film__image\"\n            ${\n              poster\n                ? `\n        src=\"${posterLargeUrl}${poster}\"\n        `\n                : `src = 'https://upload.wikimedia.org/wikipedia/commons/f/f9/No-image-available.jpg'`\n            }\n                        alt=\"Movie: ${filmTitle}\"\n          />\n        </a>\n      </div>\n      <div class=\"film__info\">\n      <p class=\"film__info--text\">Watch \"${filmTitle}\" online</p>\n      </div>\n      <div class=\"film__content\">\n        ${\n          filmTitle\n            ? `\n        <h3 class=\"film__film__title\">\n          ${filmTitle}</h3>\n        `\n            : ''\n        } ${\n          genre_ids\n            ? `\n        <p class=\"film__genres\">${genre_ids\n          .map(id => genresDict[id])\n          .join(', ')}\n        </p>\n        `\n            : ''\n        } \n\n        ${\n          filmDate\n            ? `\n        <p class=\"film__date\">| ${new Date(filmDate).getFullYear()}</p>\n        `\n            : ''\n        } \n   \n    </li>\n    `;\n      }\n    )\n    .join('');\n}\n","import axios from 'axios';\nimport { API_KEY, BASE_URL } from './films-service';\n\nasync function fetchMovieGenres() {\n  try {\n    const url = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data.genres.reduce((acc, currentValue) => {\n      acc[currentValue.id] = currentValue.name;\n\n      return acc;\n    }, {});\n  } catch (error) {\n    alert('ERRORgenres');\n  }\n}\n\nasync function fetchTvGenres() {\n  try {\n    const url = `${BASE_URL}/genre/tv/list?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response.data.genres.reduce((acc, currentValue) => {\n      acc[currentValue.id] = currentValue.name;\n\n      return acc;\n    }, {});\n  } catch (error) {\n    alert('ERRORTvgenres');\n  }\n}\n\nexport async function combineGenres() {\n  const movieGenres = await fetchMovieGenres();\n  const tvGenres = await fetchTvGenres();\n  const genres = { ...movieGenres, ...tvGenres };\n  return genres;\n}\n"],"names":["parcelRequire","$00aff065e868c198$var$refs","$lpPzL","getRefs","$00aff065e868c198$export$4c07ddf2d98a14f0","videos","trailer","find","video","name","watchBtn","classList","add","trailerOverlay","insertVideoCont","insertAdjacentHTML","key","site","$00aff065e868c198$var$videoTpl","async","$00aff065e868c198$export$3949c78fa34dc1d0","trailerBox","setAttribute","closeVideoBtn","removeAttribute","scrollIntoView","$00aff065e868c198$export$add73491473b3471","document","querySelectorAll","forEach","v","src","pause","remove","addEventListener","$fzYh0","$f67af35c03933beb$var$refs","$f67af35c03933beb$var$firebase","Firebase","addToWatched","e","textContentAdd","textContentRemove","console","log","setDoc","userId","target","textContent","includes","removeFilmById","addToQueue","filmGallery","watchedMovies","getDoc","watchedMoviesId","Object","values","id","queueMovies","queueMoviesId","$00a862f89aaa0a72$var$refs","$00a862f89aaa0a72$export$605b145a07818080","movie","insertImgCont","original_title","poster_path","backdrop_path","moviePoster","$00a862f89aaa0a72$export$a30ef51ab559b8","movieBox","title","original_name","popularity","genres","vote_average","vote_count","overview","movieTitle","movieGenres","map","genre","toFixed","join","$00a862f89aaa0a72$export$d3af4656dcd9770b","querySelector","style","display","$00a862f89aaa0a72$var$onMovieModalClose","modalBackdrop","window","removeEventListener","$00a862f89aaa0a72$var$onEscPress","innerHTML","code","currentTarget","preventDefault","contains","movieCard","$1f0dc3b9307be026$export$57f8c9967d0d81f3","fetchMovie","movieId","fetchMovieVideo","modalCloseBtn","$eb5b4b6d39880dcf$export$188cb65847573555","results","genresDict","release_date","first_air_date","genre_ids","votes","poster","id1","filmTitle","filmDate","Date","getFullYear","$2shzp","$1c71b2a1096765e9$export$1598e1643bb93e96","url","$cQLOM","BASE_URL","API_KEY","default","get","data","reduce","acc","currentValue","error","alert","$1c71b2a1096765e9$var$fetchMovieGenres","$1c71b2a1096765e9$var$fetchTvGenres","$71009b01fa8718e8$var$refs","$71009b01fa8718e8$var$filmsApiService","FilmsApiService","searchForm","form","query","elements","search","value","trim","filmOnSearch","fetchFilmsOnSearch","films","$71009b01fa8718e8$var$renderFilmGallery","reset","$1f0dc3b9307be026$var$refs","$1f0dc3b9307be026$var$renderFilmGallery","fetchFilmsTrending","$1f0dc3b9307be026$var$load"],"version":3,"file":"index.41164607.js.map"}