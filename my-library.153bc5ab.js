var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},n={},i=e.parcelRequired7c6;null==i&&((i=function(e){if(e in t)return t[e].exports;if(e in n){var i=n[e];delete n[e];var a={id:e,exports:{}};return t[e]=a,i.call(a.exports,a,a.exports),a.exports}var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,t){n[e]=t},e.parcelRequired7c6=i),i("bWo2c"),i("fzYh0");var a=i("fzYh0"),o=i("lpPzL"),s=i("cQLOM");o=i("lpPzL");const c=new(0,s.FilmsApiService),l=(0,o.getRefs)();function r(e){return e.map(d).join("")}async function d(e){const t=await c.fetchMovie(e),n=function(e,t){const{original_name:n,original_title:i,genres:a,vote_average:o,release_date:s,id:c}=e,l=n??i??"",r=a?a.map((e=>e.name)):"";return` <li   class="film__item">\n    \n        <a class="film__link"\n        href="#"\n        >\n          <img id='${c}'\n            class="film__image"\n            ${t?`\n        src="${t}"\n        `:"src = ''"}\n                        alt="Movie: ${l}"\n            loading="lazy"\n          />\n        </a>\n      </div>\n      <div class="film__info">\n      <p class="film__info--text">Watch ${l} online</p>\n      </div>\n      <div class="film__content">\n        ${l?`\n        <h3 class="film__film__title">\n          ${l}</h3>\n        `:""} ${r?`\n        <p class="film__genres">${r.join(", ")}\n        </p>\n        `:""} \n        \n        ${s?`\n        <p class="film__date">| ${new Date(s).getFullYear()}</p>\n        `:""} \n        ${o?`\n        <p class="film__value">${o.toFixed(2)}</p>\n        `:""}\n   \n    </li>\n    `}(t,function({poster_path:e,backdrop_path:t}={}){return`https://image.tmdb.org/t/p/original${e??t??""}`}(t));l.filmGallery.insertAdjacentHTML("beforeend",n)}l.filmGallery.addEventListener("click",u);function m(e){l.insertImgCont.insertAdjacentHTML("beforeend",function({original_title:e,poster_path:t,backdrop_path:n}={}){const i=t??n??"";return`\n             <img\n            class="movie__poster"\n            ${i?`\n        src="https://image.tmdb.org/t/p/original${i}"\n        `:"src = ''"}\n                        alt="Movie: ${e??""}"\n          />\n`}(e)),l.movieBox.insertAdjacentHTML("beforeend",function(e){const{title:t,original_name:n,original_title:i,popularity:a,genres:o,vote_average:s,vote_count:c,overview:l,id:r,video:d}=e,m=n??i??"",u=o?o.map((e=>e.name)):"";return`\n  <div class="img-box"></div>\n  <div class="movie__id" id="${r}" ><h2 class="movie-card__title">\n    ${t??m}\n    </h2>\n  <div class="movie__info-container">\n<table class="movie-info__table">\n  <tr>\n    ${c?'\n            <td class="movie__info-item">Vote / Votes</td>\n        ':""}\n    ${c?`\n            <td class="movie__info-data"><span class="td-box">${s.toFixed(1)}</span> / ${c}</td>\n        `:""}\n    \n  </tr>\n  <tr>\n    ${a?'\n            <td class="movie__info-item">Popularity</td>\n        ':""}\n    ${a?`\n            <td class="movie__info-data">${a.toFixed(1)}</td>\n        `:""}\n  </tr>\n  <tr>\n     ${m?'\n                <td class="movie__info-item">Original Title</td>\n        ':""}\n    ${m?`\n                <td class="movie__info-data movie__info-data--title">${m}</td>\n        `:""}\n  </tr>\n    <tr>\n    ${u?'<td class="movie__info-item">Genre</td>':""}\n    ${u?`<td class="movie__info-data">${u.join(", ")}</td>`:""}\n  </tr>\n</table>\n</div>\n${l?'\n    <h3 class="movie__about">About</h3> ':""}\n${l?`\n    <p class="movie__about-info">${l}</p> `:""}\n</div>`}(e))}async function u(e){if(e.preventDefault(),!e.target.classList.contains("film__image"))return;l.insertImgCont.innerHTML="",l.movieBox.innerHTML="",l.watchBtn.classList.remove("not-active");const t=await c.fetchMovie(e.target.id);if(!t)return;l.modalBackdrop.classList.remove("is-hidden"),window.addEventListener("keydown",v),document.querySelector("body").classList.add("modal-open"),m(t);const n=document.querySelector(".movie__id").id;!function(e){const t=e.find((e=>"Official Trailer"===e.name??{}));if(!t)return l.watchBtn.classList.add("not-active"),void l.trailerOverlay.classList.add("not-active");l.insertVideoCont.insertAdjacentHTML("beforeend",function(e){const{key:t,site:n}=e;return`<iframe class="iframe" width="100%" height="100%" src="https://www.${n}.com/embed/${t}?origin=https://asyrotenko.github.io" title="video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media;\n    gyroscope; picture-in-picture" allowfullscreen></iframe>`}(t))}(await c.fetchMovieVideo(n))}function f(e){l.trailerOverlay.classList.remove("not-active"),l.modalBackdrop.classList.add("is-hidden"),window.removeEventListener("keydown",v),g(),document.querySelector("body").classList.remove("modal-open"),l.insertVideoCont.innerHTML=" ",l.addToWatched.textContent="add to watched",l.addToWatched.classList.remove("film-btn--active"),l.addToQueue.textContent="add to queue",l.addToQueue.classList.remove("film-btn--active")}function v(e){"Escape"===e.code&&f()}document.querySelector(".backdrop").addEventListener("click",(function(e){e.currentTarget===e.target&&f()})),l.filmGallery.addEventListener("click",u),l.modalCloseBtn.addEventListener("click",f);async function _(){l.insertVideoCont.classList.add("is-active"),l.trailerBox.classList.add("is-active"),l.watchBtn.setAttribute("disabled"," "),l.closeVideoBtn.removeAttribute("disabled"),l.insertVideoCont.scrollIntoView()}function g(){document.querySelectorAll("iframe").forEach((e=>{e.src=e.src})),document.querySelectorAll("video").forEach((e=>{e.pause()})),l.insertVideoCont.classList.remove("is-active"),l.trailerBox.classList.remove("is-active"),l.closeVideoBtn.setAttribute("disabled",""),l.watchBtn.removeAttribute("disabled")}l.trailerOverlay.addEventListener("click",_),l.closeVideoBtn.addEventListener("click",g),l.watchBtn.addEventListener("click",_);const h=(0,o.getRefs)(),p=new(0,a.Firebase);async function b(){h.queue.classList.remove("film-btn--active"),h.watched.classList.add("film-btn--active");let e=await p.getDoc("watched");0===e.length?(console.log("ERROR"),h.filmGallery.innerHTML="",h.filmGallery.insertAdjacentHTML("beforeend",'<li class="film__list-error">\n      <p class="library__text">No watched movies found in the library</p>\n      <img src="https://nejdancs.github.io/filmoteka/cat__1.21cb105d.png" alt="No watched movies found in the library"/>\n    </li>')):(h.filmGallery.innerHTML="",r(e))}h.watched.addEventListener("click",b),h.queue.addEventListener("click",(async function(){h.watched.classList.remove("film-btn--active"),h.queue.classList.add("film-btn--active");let e=await p.getDoc("queue");0===e.length?(console.log("ERROR"),h.filmGallery.innerHTML="",h.filmGallery.insertAdjacentHTML("beforeend",'<li class="film__list-error">\n        <p class="library__text">No movies saved for viewing were found in the library</p>\n        <img src="https://nejdancs.github.io/filmoteka/cat__1.21cb105d.png" alt="No movies saved for viewing were found in the library"/>\n      </li>')):(h.filmGallery.innerHTML="",r(e))}));const L=setInterval((function(e){try{h.watched.classList.add("film-btn--active"),p.userStatus(),console.log("got id"),b(),clearInterval(L)}catch(e){console.log("error")}}),250);a=i("fzYh0");const w=(0,(o=i("lpPzL")).getRefs)(),y=new(0,a.Firebase);w.addToWatched.addEventListener("click",(function(e){const t="add to watched",n="remove from watched";console.log(y.setDoc.userId),e.target.textContent.includes(t)?(e.target.textContent=n,y.setDoc("watched"),y.removeFilmById("queue"),w.addToQueue.textContent="add to queue",w.addToQueue.classList.remove("film-btn--active")):e.target.textContent.includes(n)&&(e.target.textContent=t,y.removeFilmById("watched"),w.addToWatched.classList.remove("film-btn--active"))})),w.addToQueue.addEventListener("click",(function(e){const t="add to queue",n="remove from queue";e.target.textContent.includes(t)?(e.target.textContent=n,y.setDoc("queue"),y.removeFilmById("watched"),w.addToWatched.textContent="add to watched",w.addToWatched.classList.remove("film-btn--active")):e.target.textContent.includes(n)&&(e.target.textContent=t,y.removeFilmById("queue"),w.addToQueue.classList.remove("film-btn--active"))})),w.filmGallery.addEventListener("click",(async function(e){const t=await y.getDoc("watched"),n=Object.values(t);n.includes(e.target.id)&&(w.addToWatched.textContent="remove from watched",w.addToWatched.classList.add("film-btn--active"));const i=await y.getDoc("queue"),a=Object.values(i);a.includes(e.target.id)&&(w.addToQueue.textContent="remove from queue",w.addToQueue.classList.add("film-btn--active"))})),i("97fqm"),i("7bYU0");(0,(o=i("lpPzL")).getRefs)();
//# sourceMappingURL=my-library.153bc5ab.js.map
