var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},n={},i=e.parcelRequired7c6;null==i&&((i=function(e){if(e in t)return t[e].exports;if(e in n){var i=n[e];delete n[e];var a={id:e,exports:{}};return t[e]=a,i.call(a.exports,a,a.exports),a.exports}var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,t){n[e]=t},e.parcelRequired7c6=i),i("7bYU0");const a=(0,(u=i("lpPzL")).getRefs)();function o(e){const t=e.find((e=>"Official Trailer"===e.name??{}));if(!t)return a.watchBtn.classList.add("not-active"),void a.trailerOverlay.classList.add("not-active");a.insertVideoCont.insertAdjacentHTML("beforeend",function(e){const{key:t,site:n}=e;return`<iframe class="iframe" width="100%" height="100%" src="https://www.${n}.com/embed/${t}?origin=https://asyrotenko.github.io" title="video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media;\n    gyroscope; picture-in-picture" allowfullscreen></iframe>`}(t))}async function s(){a.insertVideoCont.classList.add("is-active"),a.trailerBox.classList.add("is-active"),a.watchBtn.setAttribute("disabled"," "),a.closeVideoBtn.removeAttribute("disabled"),a.insertVideoCont.scrollIntoView()}function r(){document.querySelectorAll("iframe").forEach((e=>{e.src=e.src})),document.querySelectorAll("video").forEach((e=>{e.pause()})),a.insertVideoCont.classList.remove("is-active"),a.trailerBox.classList.remove("is-active"),a.closeVideoBtn.setAttribute("disabled",""),a.watchBtn.removeAttribute("disabled")}a.trailerOverlay.addEventListener("click",s),a.closeVideoBtn.addEventListener("click",r),a.watchBtn.addEventListener("click",s),i("bWo2c");var d=i("fzYh0");const c=(0,(u=i("lpPzL")).getRefs)(),l=new(0,d.Firebase);c.addToWatched.addEventListener("click",(function(e){const t="add to watched",n="remove from watched";console.log(l.setDoc.userId),e.target.textContent.includes(t)?(e.target.textContent=n,l.setDoc("watched"),l.removeFilmById("queue"),c.addToQueue.textContent="add to queue",c.addToQueue.classList.remove("film-btn--active")):e.target.textContent.includes(n)&&(e.target.textContent=t,l.removeFilmById("watched"),c.addToWatched.classList.remove("film-btn--active"))})),c.addToQueue.addEventListener("click",(function(e){const t="add to queue",n="remove from queue";e.target.textContent.includes(t)?(e.target.textContent=n,l.setDoc("queue"),l.removeFilmById("watched"),c.addToWatched.textContent="add to watched",c.addToWatched.classList.remove("film-btn--active")):e.target.textContent.includes(n)&&(e.target.textContent=t,l.removeFilmById("queue"),c.addToQueue.classList.remove("film-btn--active"))})),c.filmGallery.addEventListener("click",(async function(e){const t=await l.getDoc("watched"),n=Object.values(t);n.includes(e.target.id)&&(c.addToWatched.textContent="remove from watched",c.addToWatched.classList.add("film-btn--active"));const i=await l.getDoc("queue"),a=Object.values(i);a.includes(e.target.id)&&(c.addToQueue.textContent="remove from queue",c.addToQueue.classList.add("film-btn--active"))})),i("fzYh0");var u=i("lpPzL");const m=(0,u.getRefs)();function f(e){m.insertImgCont.insertAdjacentHTML("beforeend",function({original_title:e,poster_path:t,backdrop_path:n}={}){const i=t??n??"";return`\n             <img\n            class="movie__poster"\n            ${i?`\n        src="https://image.tmdb.org/t/p/original${i}"\n        `:"src = ''"}\n                        alt="Movie: ${e??""}"\n          />\n`}(e)),m.movieBox.insertAdjacentHTML("beforeend",function(e){const{title:t,original_name:n,original_title:i,popularity:a,genres:o,vote_average:s,vote_count:r,overview:d,id:c,video:l}=e,u=n??i??"",m=o?o.map((e=>e.name)):"";return`\n  <div class="img-box"></div>\n  <div class="movie__id" id="${c}" ><h2 class="movie-card__title">\n    ${t??u}\n    </h2>\n  <div class="movie__info-container">\n<table class="movie-info__table">\n  <tr>\n    ${r?'\n            <td class="movie__info-item">Vote / Votes</td>\n        ':""}\n    ${r?`\n            <td class="movie__info-data"><span class="td-box">${s.toFixed(1)}</span> / ${r}</td>\n        `:""}\n    \n  </tr>\n  <tr>\n    ${a?'\n            <td class="movie__info-item">Popularity</td>\n        ':""}\n    ${a?`\n            <td class="movie__info-data">${a.toFixed(1)}</td>\n        `:""}\n  </tr>\n  <tr>\n     ${u?'\n                <td class="movie__info-item">Original Title</td>\n        ':""}\n    ${u?`\n                <td class="movie__info-data movie__info-data--title">${u}</td>\n        `:""}\n  </tr>\n    <tr>\n    ${m?'<td class="movie__info-item">Genre</td>':""}\n    ${m?`<td class="movie__info-data">${m.join(", ")}</td>`:""}\n  </tr>\n</table>\n</div>\n${d?'\n    <h3 class="movie__about">About</h3> ':""}\n${d?`\n    <p class="movie__about-info">${d}</p> `:""}\n</div>`}(e)),document.querySelector(".spinner").style.display="none"}function v(e){m.trailerOverlay.classList.remove("not-active"),m.modalBackdrop.classList.add("is-hidden"),window.removeEventListener("keydown",_),r(),document.querySelector("body").classList.remove("modal-open"),m.insertVideoCont.innerHTML=" ",m.addToWatched.textContent="add to watched",m.addToWatched.classList.remove("film-btn--active"),m.addToQueue.textContent="add to queue",m.addToQueue.classList.remove("film-btn--active")}function _(e){"Escape"===e.code&&v()}document.querySelector(".backdrop").addEventListener("click",(function(e){e.currentTarget===e.target&&v()})),m.filmGallery.addEventListener("click",(async function(e){if(e.preventDefault(),!e.target.classList.contains("film__image"))return;m.insertImgCont.innerHTML="",m.movieBox.innerHTML="",m.watchBtn.classList.remove("not-active");const t=await $.fetchMovie(e.target.id);if(!t)return;m.modalBackdrop.classList.remove("is-hidden"),window.addEventListener("keydown",_),document.querySelector("body").classList.add("modal-open"),f(t);const n=document.querySelector(".movie__id").id;o(await $.fetchMovieVideo(n))})),m.modalCloseBtn.addEventListener("click",v);u=i("lpPzL");var g=i("cQLOM");function p({results:e},t){return e.map((({original_name:e,original_title:n,release_date:i,first_air_date:a,genre_ids:o,vote_average:s,poster_path:r,id:d})=>{const c=e??n??"",l=i??a??"";return` <li   class="film__item">\n    \n        <a class="film__link"\n        href="#"\n        >\n          <img id='${d}'\n            class="film__image"\n            ${r?`\n        src="https://image.tmdb.org/t/p/original${r}"\n        `:"src = 'https://upload.wikimedia.org/wikipedia/commons/f/f9/No-image-available.jpg'"}\n                        alt="Movie: ${c}"\n          />\n        </a>\n      </div>\n      <div class="film__info">\n      <p class="film__info--text">Watch "${c}" online</p>\n      </div>\n      <div class="film__content">\n        ${c?`\n        <h3 class="film__film__title">\n          ${c}</h3>\n        `:""} ${o?`\n        <p class="film__genres">${o.map((e=>t[e])).join(", ")}\n        </p>\n        `:""} \n\n        ${l?`\n        <p class="film__date">| ${new Date(l).getFullYear()}</p>\n        `:""} \n   \n    </li>\n    `})).join("")}var h=i("2shzp");g=i("cQLOM");async function y(){return{...await async function(){try{const e=`${g.BASE_URL}/genre/movie/list?api_key=${g.API_KEY}&language=en-US`;return(await h.default.get(e)).data.genres.reduce(((e,t)=>(e[t.id]=t.name,e)),{})}catch(e){alert("ERRORgenres")}}(),...await async function(){try{const e=`${g.BASE_URL}/genre/tv/list?api_key=${g.API_KEY}&language=en-US`;return(await h.default.get(e)).data.genres.reduce(((e,t)=>(e[t.id]=t.name,e)),{})}catch(e){alert("ERRORTvgenres")}}()}}const w=(0,u.getRefs)(),L=new(0,g.FilmsApiService);w.searchForm.addEventListener("submit",(async function(e){e.preventDefault();const t=e.target;if(L.query=e.target.elements.search.value.trim(),""===L.query)return alert("Please type something"),void console.log("ERROR");const n=await y(),i=await L.fetchFilmsOnSearch(L.query);w.filmGallery.innerHTML="",function(e,t){w.filmGallery.insertAdjacentHTML("beforeend",p(e,t))}(i,n),t.reset()})),i("97fqm");g=i("cQLOM");const b=(0,(u=i("lpPzL")).getRefs)();const $=new(0,g.FilmsApiService);!async function(){const e=await y();!function(e,t){b.filmGallery.insertAdjacentHTML("beforeend",p(e,t)),document.querySelector(".spinner").style.display="none"}(await $.fetchFilmsTrending(),e)}();
//# sourceMappingURL=index.41164607.js.map
