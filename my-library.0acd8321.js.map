{"mappings":"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","sources":["src/my-library.js","src/js/firebase-db-library.js","src/js/library-gallery.js"],"sourcesContent":["import './js/firebase-auth';\nimport './js/firebase-class';\nimport './js/firebase-db-index';\nimport './js/firebase-db-library';\n// import './js/firebase-movie-status-library';\nimport './js/change-color-scheme.js';\nimport './js/modal-team';\nimport './js/backToTop';\n","import { Firebase } from './firebase-class';\nimport { getRefs } from './get-refs';\nimport { renderLibrary } from './library-gallery';\nconst refs = getRefs();\n\nconst firebase = new Firebase();\n\nrefs.watched.addEventListener('click', showWatched);\nrefs.queue.addEventListener('click', showQueue);\n\nasync function showWatched() {\n  refs.queue.classList.remove('film-btn--active');\n  refs.watched.classList.add('film-btn--active');\n\n  let watched = await firebase.getDoc('watched');\n  if (watched.length === 0) {\n\n    //SPINNER\n    document.querySelector('.spinner').classList.add('hidden');\n    refs.filmGallery.innerHTML = '';\n    refs.filmGallery.insertAdjacentHTML(\n      'beforeend',\n      `<li class=\"film__list-error\">\n      <p class=\"library__text\">No watched movies found in the library</p>\n      <img src=\"https://nejdancs.github.io/filmoteka/cat__1.21cb105d.png\" alt=\"No watched movies found in the library\"/>\n    </li>`\n    );\n  } else {\n    refs.filmGallery.innerHTML = '';\n    renderLibrary(watched);\n    document.querySelector('.spinner').classList.add('hidden');\n  }\n}\n\nasync function showQueue() {\n  refs.watched.classList.remove('film-btn--active');\n  refs.queue.classList.add('film-btn--active');\n\n  // SPINNER\n  document.querySelector('.spinner').classList.add('hidden');\n\n  \n  let queue = await firebase.getDoc('queue');\n\n  if (queue.length === 0) {\n    refs.filmGallery.innerHTML = '';\n    document.querySelector(\".footer\").classList.add('footer--empty-library');\n    refs.filmGallery.insertAdjacentHTML(\n      'beforeend',\n      `<li class=\"film__list-error\">\n        <p class=\"library__text\">No movies saved for viewing were found in the library</p>\n        <img src=\"https://nejdancs.github.io/filmoteka/cat__1.21cb105d.png\" alt=\"No movies saved for viewing were found in the library\"/>\n      </li>`\n    );\n  } else {\n    refs.filmGallery.innerHTML = '';\n    renderLibrary(queue);\n  }\n}\nconst qwe = setInterval(getUserStatus, 250);\n\nfunction getUserStatus(params) {\n  try {\n    refs.watched.classList.add('film-btn--active');\n    firebase.userStatus();\n    showWatched();\n    clearInterval(qwe);\n  } catch (error) {\n    console.log('error');\n  }\n}\n","import { FilmsApiService } from './films-service';\nexport const filmsApiService = new FilmsApiService();\nimport { getRefs } from './get-refs';\n\nconst refs = getRefs();\n\nexport function renderLibrary(filmsIds) {\n  return filmsIds.map(renderMovieCardLib).join('');\n}\n\nrefs.filmGallery.addEventListener('click', onMovieCardClick);\n\nasync function renderMovieCardLib(movieId) {\n  const movie = await filmsApiService.fetchMovie(movieId);\n  const markup = movieTplLib(movie);\n  refs.filmGallery.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction movieTplLib(movie) {\n  const {\n    original_name,\n    original_title,\n    genres,\n    vote_average,\n    vote_count,\n    release_date,\n    poster_path: posterPath,\n    id,\n  } = movie;\n\n  const movieTitle = original_name ?? original_title ?? '';\n  const movieGenres = genres ? genres.map(genre => genre.name) : '';\n\n  return ` <li   class=\"film__item\">\n    \n        <a class=\"film__link\"\n        href=\"#\"\n        >\n     <img\n  id=\"${id}\"\n  data-imgpath=${posterPath}\n  class=\"film__image\"\n  ${\n    posterPath\n      ? `\n  srcset=\"\n  https://image.tmdb.org/t/p/w500/${posterPath}      500w,\n  https://image.tmdb.org/t/p/w780/${posterPath}      780w,\n  https://image.tmdb.org/t/p/w1280/${posterPath}    1280w,\n  https://image.tmdb.org/t/p/w300/${posterPath}      300w,\n    https://image.tmdb.org/t/p/original/${posterPath} 2000w\n  \"\n  src=\"https://image.tmdb.org/t/p/w300/${posterPath}\"\n  sizes=\"(min-width:1200px) 33vw, (min-width:768px) 50vw, 100vw\"\n\n  `\n      : `src=\"https://upload.wikimedia.org/wikipedia/commons/f/f9/No-image-available.jpg\"\n  `\n  }\n  alt=\"Movie: ${movieTitle}\"\n/>\n        </a>\n      </div>\n      <div class=\"film__info\">\n          <div class=\"aver-rate\">\n            <p class=\"film__info--text\"> Average rate ${vote_average.toFixed(\n              1\n            )} </p>\n          </div>\n          <div class=\"votes-amount\">\n            <p class=\"film__info--text\"> Votes ${vote_count}</p>\n          </div>\n        </div>\n      <div class=\"film__content\">\n        ${\n          movieTitle\n            ? `\n        <h3 class=\"film__film__title\">\n          ${movieTitle}</h3>\n        `\n            : ''\n        } ${\n    movieGenres\n      ? `\n        <p class=\"film__genres\">${movieGenres.join(', ')}\n        </p>\n        `\n      : ''\n  } \n        \n        ${\n          release_date\n            ? `\n        <p class=\"film__date\">| ${new Date(release_date).getFullYear()}</p>\n        `\n            : ''\n        } \n        ${\n          vote_average\n            ? `\n        <p class=\"film__value\">${vote_average.toFixed(2)}</p>\n        `\n            : ''\n        }\n   \n    </li>\n    `;\n}\nconst backdrop = document.querySelector('.backdrop');\nbackdrop.addEventListener('click', backdropClick);\n\nfunction renderMovieCard(movie, path) {\n  refs.insertImgCont.insertAdjacentHTML('beforeend', getPosterForCard(path));\n  refs.movieBox.insertAdjacentHTML('beforeend', movieCardTpl(movie));\n\n  document.querySelector('.spinner').classList.remove('hidden');\n   \n}\nfunction movieCardTpl(movie) {\n  const {\n    title,\n    original_name,\n    original_title,\n    popularity,\n    genres,\n    vote_average,\n    vote_count,\n    overview,\n    id,\n  } = movie;\n\n  const movieTitle = original_name ?? original_title ?? '';\n  const movieGenres = genres ? genres.map(genre => genre.name) : '';\n\n  return `\n  <div class=\"movie__id\" id=\"${id}\" ><h2 class=\"movie-card__title\">\n    ${title ?? movieTitle}\n    </h2>\n  <div class=\"movie__info-container\">\n<table class=\"movie-info__table\">\n  <tr>\n    ${\n      vote_count\n        ? `\n            <td class=\"movie__info-item\">Vote / Votes</td>\n        `\n        : ''\n    }\n    ${\n      vote_count\n        ? `\n            <td class=\"movie__info-data\"><span class=\"td-box\">${vote_average.toFixed(\n              1\n            )}</span> / ${vote_count}</td>\n        `\n        : ''\n    }\n    \n  </tr>\n  <tr>\n    ${\n      popularity\n        ? `\n            <td class=\"movie__info-item\">Popularity</td>\n        `\n        : ''\n    }\n    ${\n      popularity\n        ? `\n            <td class=\"movie__info-data\">${popularity.toFixed(1)}</td>\n        `\n        : ''\n    }\n  </tr>\n  <tr>\n     ${\n       movieTitle\n         ? `\n                <td class=\"movie__info-item\">Original Title</td>\n        `\n         : ''\n     }\n    ${\n      movieTitle\n        ? `\n                <td class=\"movie__info-data movie__info-data--title\">${movieTitle}</td>\n        `\n        : ''\n    }\n  </tr>\n    <tr>\n    ${movieGenres ? `<td class=\"movie__info-item\">Genre</td>` : ''}\n    ${\n      movieGenres\n        ? `<td class=\"movie__info-data\">${movieGenres.join(', ')}</td>`\n        : ''\n    }\n  </tr>\n</table>\n</div>\n${\n  overview\n    ? `\n    <h3 class=\"movie__about\">About</h3> `\n    : ''\n}\n${\n  overview\n    ? `\n    <p class=\"movie__about-info\">${overview}</p> `\n    : ''\n}\n</div>`;\n}\n\nfunction getPosterForCard(path) {\n  return `\n<img\n  class=\"movie__poster\"\n  ${\n    path\n      ? `\n  srcset=\"\n    https://image.tmdb.org/t/p/w300/${path}      300w,\n    https://image.tmdb.org/t/p/w500/${path}      500w,\n    https://image.tmdb.org/t/p/w780/${path}      780w,\n    https://image.tmdb.org/t/p/w1280/${path}    1280w,\n    https://image.tmdb.org/t/p/original/${path} 2000w\n  \"\n  src=\"https://image.tmdb.org/t/p/w300/${path}\"\n  sizes=\"(min-width:1200px) 33vw, (min-width:768px) 50vw, 100vw\"\n\n  `\n      : `src=\"https://upload.wikimedia.org/wikipedia/commons/f/f9/No-image-available.jpg\"\n  `\n  }\n  alt=\"Movie title\"\n/>\n`;\n}\n\nrefs.filmGallery.addEventListener('click', onMovieCardClick);\n\nasync function onMovieCardClick(e) {\n  e.preventDefault();\n  \n  if (!e.target.classList.contains('film__image')) {\n    return;\n  }\n\n  refs.insertImgCont.innerHTML = '';\n  refs.movieBox.innerHTML = '';\n  refs.watchBtn.classList.remove('not-active');\n\n  const movieCard = await filmsApiService.fetchMovie(e.target.id);\n  if (!movieCard) {\n    return;\n    // Вивести повідомлення про помилку!!!!\n  }\n\n  refs.modalBackdrop.classList.remove('is-hidden');\n  refs.btnUp.classList.add('btn-up_hide');\n  window.addEventListener('keydown', onEscPress);\n  document.querySelector('body').classList.add('modal-open');\n  let path = e.target.dataset.imgpath;\n  renderMovieCard(movieCard, path);\n  document.querySelector('.spinner').classList.add('hidden');\n  const movieCardIdRef = document.querySelector('.movie__id');\n  const movieId = movieCardIdRef.id;\n  const videos = await filmsApiService.fetchMovieVideo(movieId);\n  renderVideoBox(videos);\n}\n\nrefs.modalCloseBtn.addEventListener('click', onMovieModalClose);\n\nfunction onMovieModalClose(e) {\n  refs.trailerOverlay.classList.remove('not-active');\n\n  refs.modalBackdrop.classList.add('is-hidden');\n  window.removeEventListener('keydown', onEscPress);\n  closeVideo();\n  document.querySelector('body').classList.remove('modal-open');\n  refs.insertVideoCont.innerHTML = ' ';\n\n  refs.addToWatched.textContent = 'add to watched';\n  refs.addToWatched.classList.remove('film-btn--active');\n  refs.addToQueue.textContent = 'add to queue';\n  refs.addToQueue.classList.remove('film-btn--active');\n  if (refs.queue.classList.contains('film-btn--active')) {\n    refs.queue.click();\n  } else {\n    refs.watched.click();\n  }\n}\n\nfunction onEscPress(e) {\n  if (e.code === 'Escape') {\n    onMovieModalClose();\n  }\n}\n\nfunction backdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onMovieModalClose();\n  }\n}\n\nconst stopVideos = () => {\n  document.querySelectorAll('iframe').forEach(v => {\n    v.src = v.src;\n  });\n  document.querySelectorAll('video').forEach(v => {\n    v.pause();\n  });\n};\n\nrefs.trailerOverlay.addEventListener('click', showVideo);\nrefs.closeVideoBtn.addEventListener('click', closeVideo);\nrefs.watchBtn.addEventListener('click', showVideo);\n\nfunction videoTpl(trailer) {\n  const { key, site } = trailer;\n\n  return `<iframe class=\"iframe\" width=\"100%\" height=\"100%\" src=\"https://www.${site}.com/embed/${key}?origin=https://asyrotenko.github.io\" title=\"video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media;\n    gyroscope; picture-in-picture\" allowfullscreen></iframe>`;\n}\n\nfunction renderVideoBox(videos) {\n  const trailer = videos.find(video => video.name === 'Official Trailer' ?? {});\n  if (!trailer) {\n    refs.watchBtn.classList.add('not-active');\n    refs.trailerOverlay.classList.add('not-active');\n    return;\n  }\n  refs.insertVideoCont.insertAdjacentHTML('beforeend', videoTpl(trailer));\n}\n\nasync function showVideo() {\n  refs.insertVideoCont.classList.add('is-active');\n  refs.trailerBox.classList.add('is-active');\n  refs.watchBtn.setAttribute('disabled', ' ');\n  refs.closeVideoBtn.removeAttribute('disabled');\n  refs.insertVideoCont.scrollIntoView();\n}\n\nfunction closeVideo() {\n  stopVideos();\n  refs.insertVideoCont.classList.remove('is-active');\n  refs.trailerBox.classList.remove('is-active');\n  refs.closeVideoBtn.setAttribute('disabled', '');\n  refs.watchBtn.removeAttribute('disabled');\n}\n"],"names":["parcelRequire","$fzYh0","$cQLOM","$fc5a387510d6563b$export$57f8c9967d0d81f3","FilmsApiService","$fc5a387510d6563b$var$refs","$lpPzL","getRefs","$fc5a387510d6563b$export$e7d1a4959038c5e5","filmsIds","map","$fc5a387510d6563b$var$renderMovieCardLib","join","async","movieId","markup","movie","original_name","original_title","genres","vote_average","vote_count","release_date","poster_path","posterPath","id","movieTitle","movieGenres","genre","name","toFixed","Date","getFullYear","$fc5a387510d6563b$var$movieTplLib","fetchMovie","filmGallery","insertAdjacentHTML","addEventListener","$fc5a387510d6563b$var$onMovieCardClick","e","preventDefault","target","classList","contains","insertImgCont","innerHTML","movieBox","watchBtn","remove","movieCard","modalBackdrop","btnUp","add","window","$fc5a387510d6563b$var$onEscPress","document","querySelector","path","$fc5a387510d6563b$var$getPosterForCard","title","popularity","overview","$fc5a387510d6563b$var$movieCardTpl","$fc5a387510d6563b$var$renderMovieCard","dataset","imgpath","videos","trailer","find","video","trailerOverlay","insertVideoCont","key","site","$fc5a387510d6563b$var$videoTpl","$fc5a387510d6563b$var$renderVideoBox","fetchMovieVideo","$fc5a387510d6563b$var$onMovieModalClose","removeEventListener","$fc5a387510d6563b$var$closeVideo","addToWatched","textContent","addToQueue","queue","click","watched","code","currentTarget","modalCloseBtn","$fc5a387510d6563b$var$showVideo","trailerBox","setAttribute","closeVideoBtn","removeAttribute","scrollIntoView","querySelectorAll","forEach","v","src","pause","$22070eaa231eed7e$var$refs","$22070eaa231eed7e$var$firebase","Firebase","$22070eaa231eed7e$var$showWatched","getDoc","length","$22070eaa231eed7e$var$qwe","setInterval","params","userStatus","clearInterval","error","console","log"],"version":3,"file":"my-library.0acd8321.js.map"}